Assignment 3 Code
import numpy as np
import multiprocessing as mp


def calculate_sum(array): partial_sum = np.sum(array) return partial_sum

if  name	== '   main    ':
num_processes = mp.cpu_count() # Number of available processes/threads
print("Enter size of array")
array_size = int(input()) # Size of the input array array = np.arange(1, array_size + 1) # Input array print("Input Array:", array)
# Divide the array into equal chunks for each process
chunk_size = array_size // num_processes
chunks = [array[i:i+chunk_size] for i in range(0, array_size, chunk_size)]


# Calculate partial sums using OpenMP
with mp.Pool(processes=num_processes) as pool: partial_sums = pool.map(calculate_sum, chunks)

# Display intermediate sums calculated at different processes
for i, partial_sum in enumerate(partial_sums):
print(f"Process {i}: Partial Sum = {partial_sum}")


# Calculate the final sum by combining the partial sums
total_sum = np.sum(partial_sums)


print("Total Sum:", total_sum)
 
Output:


Enter size of array 150
Input Array: [ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126
127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144
145 146 147 148 149 150]


Process 0: Partial Sum = 45
Process 1: Partial Sum = 126
Process 2: Partial Sum = 207
Process 3: Partial Sum = 288
Process 4: Partial Sum = 369
Process 5: Partial Sum = 450
Process 6: Partial Sum = 531
Process 7: Partial Sum = 612
Process 8: Partial Sum = 693
Process 9: Partial Sum = 774
Process 10: Partial Sum = 855
Process 11: Partial Sum = 936
Process 12: Partial Sum = 1017
Process 13: Partial Sum = 1098
Process 14: Partial Sum = 1179
Process 15: Partial Sum = 1260
Process 16: Partial Sum = 885
Total Sum: 11325
